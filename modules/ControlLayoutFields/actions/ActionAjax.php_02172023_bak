<?php
/*+***********************************************************************************
 * The contents of this file are subject to the vtiger CRM Public License Version 1.0
 * ("License"); You may not use this file except in compliance with the License
 * The Original Code is:  vtiger CRM Open Source
 * The Initial Developer of the Original Code is vtiger.
 * Portions created by vtiger are Copyright (C) vtiger.
 * All Rights Reserved.
 *************************************************************************************/

class ControlLayoutFields_ActionAjax_Action extends Vtiger_IndexAjax_View {

	function __construct() {
		parent::__construct();
		$this->exposeMethod('checkCLFForModule');
        $this->exposeMethod('getFieldValue');
        $this->vteLicense();
	}

    function vteLicense() {
        $vTELicense=new ControlLayoutFields_VTELicense_Model('ControlLayoutFields');
        if(!$vTELicense->validate()){
            header("Location: index.php?module=ControlLayoutFields&parent=Settings&view=ListAll&mode=step2");
        }
    }

	public function process(Vtiger_Request $request) {
		$mode = $request->getMode();
		if(!empty($mode)) {
			$this->invokeExposedMethod($mode, $request);
			return;
		}
	}

	public function checkCLFForModule(Vtiger_Request $request){
        global $adb;
		$current_module = $request->get('current_module');
		$extension = $request->get('extension');
		if(!empty($current_module)) {
            $db = PearDatabase::getInstance();
            $result = $db->pquery("SELECT * FROM vte_control_layout_fields c
                                    INNER JOIN vte_control_layout_fields_task t ON t.clf_id = c.id
                                    WHERE c.module = ?", array($current_module));

            $noOfrecord= $db->num_rows($result);
            $clf_info = array();
            $record_info = array();
            if($noOfrecord > 0){
                for($i=0; $i<$noOfrecord; ++$i) {
                    $condition = $db->query_result($result, $i, 'condition');
                    $condition = json_decode(html_entity_decode($condition));
                    $actions = $db->query_result($result, $i, 'actions');
                    //$clf_info['condition'] = $this ->splitCondition($condition);
                    //$clf_info['actions'] = json_decode(html_entity_decode($actions));
                    $clf_info[] = array('condition' => $this ->splitCondition($condition),'actions' =>json_decode(html_entity_decode($actions)));
                }
                //Get inforation for current record model for Detail View
                $record_id = $request->get('record_id');
                if(!empty($record_id)){
                    $current_record_model = Vtiger_Record_Model::getInstanceById($record_id);
                    $record_info = $current_record_model ->getData();
                    if(isset($record_info['related_to']) && $record_info['related_to'] > 0){
                        $related_record_model = Vtiger_Record_Model::getInstanceById( $record_info['related_to']);
                        if($related_record_model->getModule()->getName() == "Accounts"){
                            $record_info['accountname'] = $related_record_model->get('accountname');
                        }
                    }
                }
            }
            if(!empty($extension) && $extension == 'VTEButton'){
                $vtebuttons_id = $request->get('vtebuttons_id');
                $sql = "SELECT automated_update_field,automated_update_value FROM `vte_buttons_settings` WHERE id = ?;";
                $re = $adb->pquery($sql, array($vtebuttons_id));
                if ($adb->num_rows($re) > 0) {
                    $automated_update_field = $adb->query_result($re, 0, 'automated_update_field');
                    $automated_update_value = $adb->query_result($re, 0, 'automated_update_value');
                    if(!empty($automated_update_field) && !empty($automated_update_value)){
                        $record_info[$automated_update_field] = $automated_update_value;
                    }
                }
            }
            global $current_user;
            $roleid=$current_user->roleid;
			$response = new Vtiger_Response();
			$response->setResult(array("clf_info" =>$clf_info,'record_info' => $record_info,'role_id' =>$roleid));
			$response->emit();
		}
	}
    function splitCondition($conditions) {
        //$transformedConditions = array();
        $allConditions = array();
        $anyConditions = array();
        if(!empty($conditions)) {
            foreach($conditions as $p_index => $p_info) {
                foreach($p_info->columns as $index => $info) {
                    $columnname = $info ->columnname;
                    $columnname = explode(':',$columnname);
                    $value = $info->value;
                    $value = decode_html($value);
                    if($info->groupid == 0) $allConditions[] = array('columnname' => $columnname[2], 'comparator' => $info->comparator, 'value' => $value);
                    else $anyConditions[] = array('columnname' => $columnname[2], 'comparator' => $info->comparator, 'value' => $value);
                }
            }
        }
        return array('all' =>$allConditions,'any'=>$anyConditions);
    }
    //This function get value of field for all field not display in summary view
    public function getFieldValue(Vtiger_Request $request){
        $module = $request->get('current_module');
        $field_name = $request->get('field_name');
        $record_id = $request->get('record_id');
        $record_model = Vtiger_Record_Model::getInstanceById($record_id,$module);
        $field_value = $record_model ->get($field_name);
        $response = new Vtiger_Response();
        $response->setResult(array('value'=>$field_value));
        $response->emit();
    }
}